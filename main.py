import telebot
from config import TOKEN, currency
from extensions import APIException, Convertor
import traceback
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def help(message: telebot.types.Message):
    text = "–ü—Ä–∏–≤–µ–µ–µ—Ç, —Ä–∞–¥ –≤–∏–¥–µ—Ç—å ü§ó! –ß–æ –∫–∞–∫ –æ–Ω–æ –≤ —Ü–µ–ª–æ–º?\n –Ø –æ–±–ª–∞–¥–∞—é –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã–º, –≤ –Ω–∞—à–µ –±–µ–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–∞–≤—ã–∫–æ–º üòé \
    –Ø —É–º–µ—é —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç! \
–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å —è –æ–±—ä—è—Å–Ω—é —Ç—É—Ç: /help \n \
–¢—ã–∫–∞–π —Å—é–¥–∞, —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç: /values"


    bot.reply_to(message, text)

@bot.message_handler(commands=['help'])
def help(message: telebot.types.Message):
    text = "–Ø —É–º–µ—é –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã! –ö—Ä—É—Ç–æ –¥–∞? –î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ \n  \
<–∏–º—è –≤–∞–ª—é—Ç—ã, —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ> \n\
<–∏–º—è –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–¥–æ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã, —Ç–æ–∂–µ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ> \n\
<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã>\n \
–ò —è —Ç–µ–±–µ —Ä–∞–∑—ä—è—Å–Ω—é –ø–æ—á—ë–º —Ñ—É–Ω—Ç –ª–∏—Ö–∞ üòÉ  \n \
–¢—ã–∫–∞–π —Å—é–¥–∞ —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç: /values"

    bot.reply_to(message, text)

@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–ò–º–µ–µ–º –¥–µ–ª–æ —Å:'
    for key in currency.keys():
        text = '\n'.join((text, key,  ))
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text'])
def converter(message: telebot.types.Message):
    values = message.text.split()
    try:
        if len(values) != 3:
            raise APIException('–£–æ—É! –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–¥–∞–Ω–æ —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ü•¥ /help')

        answer = Convertor.get_price(*values)
    except APIException as e:
        bot.reply_to(message, f"–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ü§î :\n{e}")
    except Exception as e:
        traceback.print_tb(e.__traceback__)
        bot.reply_to(message, f"–ê —ç—Ç–æ, –¥—Ä—É–≥ –º–æ–π, –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ üò≥ :\n{e}")
    else:
        bot.reply_to(message, answer)

APIException

Convertor

bot.polling()
